const router=require("express").Router(),bcrypt=require("bcrypt"),crypto=require("crypto");router.post("/create",async function(s,t){try{var a,e,o,r,c=s.body.classId,n=s.body.tPassword,d=s.body.className;c&&n?c.match(/^\w{3,20}$/)?(e=await(a=t.app.locals.db.collection("classList")).findOne({classId:c}))?t.status(400).json({msg:"既に存在するクラスIDです。"}):(o={classId:c,tPassword:bcrypt.hashSync(n,10),className:d,createdAt:(new Date).getTime()},await a.insertOne(o),r=await bcrypt.hash(crypto.randomUUID(),10),await t.app.locals.db.collection("loginAdminSession").insertOne({classId:e.classId,sPassword:r,createdAt:(new Date).getTime()}),t.cookie("adminSession_"+e.classId,r),t.status(200).json({msg:"クラスを作成しました。",data:o})):t.status(400).json({msg:"クラスIDに半角英数字とアンダースコア（_）以外が含まれているか、3文字以上20文字以下になっていません。"}):t.status(400).json({msg:"クラスIDまたは教師用パスワードが指定されていません。"})}catch(s){console.error(s),t.status(500).json({msg:"エラーが発生しました。"})}}),module.exports=router;