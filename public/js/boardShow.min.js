async function addComment(t){let e="";e+=`
        <div class="col" id="comment_${t._id}">
            <div class="card mb-3">
                <div class="row g-0">
                    <div class="col-md-8">
                        <div class="card-body">
                            <h5 class="card-title">${escapeHTML(t.author)}</h5>
                            <p class="card-text">${t.data.content?escapeHTML(t.data.content).replace(/\r\n/g,"<br />"):""}</p>
                            <p class="card-text"><small class="text-muted">${new Date(t.createdAt).toLocaleString("ja")}</small></p>
                        </div>
                    </div>
            `;for(const o of t.data.files){let t=`data-bs-toggle="modal" data-bs-target="#lightboxModal" onclick='showModal(${JSON.stringify([o.key])})'`;var a=[];if(o.pdf){for(const n in o.pdf)a.push(o.pdf[n].image);t=`onclick='window.open("${serviceUrl}/uploads${String(o.key)}")'`}e+=`
                    <div class="col-md-4 card-link" ${t}>
                        <div class="card bg-dark text-white">
                            <img src="/uploads${a[0]||o.key}" class="bd-placeholder-img card-img-top">
                            <div class="card-img-overlay">
                                <p class="card-text">${escapeHTML(o.filename)}</p>
                            </div>
                        </div>
                    </div>`}e+=`
            </div>
        </div>
    </div>`,$("#replyList").html(e+$("#replyList").html())}async function connectWebSocket(t){var e=new WebSocket(wsUrl+"/ws/connect/"+t);e.onmessage=function(t){var t=JSON.parse(t.data);"postComment"===t.type?t.data.boardId===boardId&&addComment(t.data):"removeComment"==t.type&&(t=$("#comment_"+t.commentId))&&t.remove()},e.onclose=function(){bootstrap.showToast({body:"サーバーから切断されました。再接続します。",toastClass:"text-bg-danger"}),setTimeout(()=>{connectWebSocket(t)},5e3)}}$(function(){$.ajax({type:"GET",url:`/api/board/${classId}/board/`+boardId,contentType:"application/json",dataType:"json"}).done(async function(t,e,a){var t=t.data,o=t.data;$("#authorName").text("投稿者: "+escapeHTML(t.author)),$("#postTitle").text(escapeHTML(o.title)),$("#createdAt").text(new Date(t.createdAt).toLocaleString("ja")),$("#content").html(o.content?escapeHTML(o.content).replace(/\r\n/g,"<br />"):"");let n="";for(const c of o.files){let t=`data-bs-toggle="modal" data-bs-target="#lightboxModal" onclick='showModal(${JSON.stringify([c.key])})'`;var s=[];if(c.pdf){for(const d in c.pdf)s.push(c.pdf[d].image);t=`onclick='window.open("${serviceUrl}/uploads${String(c.key)}")'`}n+=`<div class="col">
                    <div class="card shadow-sm card-link" `+t+`>
                        <img src="/uploads${s[0]||c.key}" class="bd-placeholder-img card-img-top">
                        <div class="card-body">
                            <p class="card-text">${escapeHTML(c.filename)}</p>
                        </div>
                    </div>
                </div>`}$("#imgList").html(n),$("#replyBox").html(`<div class="card mb-3">
                    <div class="card-body">
                        <h4>コメント新規投稿</h4>
                        <p id="errorMsg2" style="color: red;"></p>
                        <div class="mb-3">
                            <label for="exampleInputEmail1" class="form-label">内容</label>
                            <textarea class="form-control" id="contentInput" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="formFileGroup" class="form-label">画像ファイル</label>
                            <div class="input-group mb-3" id="formFileGroup">
                                <input type="file" class="form-control" id="inputFile01">
                                <button class="btn btn-outline-secondary" type="button" id="removeInput01">取消</button>
                            </div>
                            <div id="fileHelp" class="form-text">png, jpg, pdfが利用できます。ファイルは5MBまでアップロードできます。</div>
                        </div>
                        <button type="button" class="btn btn-primary" id="postCommentButton">ボードの中に投稿する</button>
                    </div>
                </div>`),$("#postCommentButton").click(function(t){$("#errorMsg2").text(""),$("#loading-overlay").fadeIn(300);var e=new FormData;for(let t=1;t<=1;t++){var a=$("#inputFile0"+t).prop("files")[0];a&&e.append("files",a,encodeURIComponent(""+a.name))}var o=$("#contentInput").val();o&&e.append("content",o),$.ajax({type:"POST",url:`/api/comment/${boardId}/post`,data:e,dataType:"json",cache:!1,processData:!1,contentType:!1}).done(function(t,e,a){$("#loading-overlay").fadeOut(300),$("#contentInput").val(""),$("#inputFile01").val("")}).fail(function(t,e,a){$("#errorMsg2").text(t.responseJSON.msg),$("#loading-overlay").fadeOut(300)})}),$("#removeInput01").click(function(t){$("#inputFile01").val("")}),$.ajax({type:"GET",url:`/api/comment/${boardId}/list`,contentType:"application/json",dataType:"json"}).done(async function(t,e,a){for(const o of t.comments)addComment(o);await connectWebSocket(classId)}).fail(function(t,e,a){$("#errorMsg").text(t.responseJSON.msg)})}).fail(function(t,e,a){$("#loading-overlay").fadeOut(300),$("#errorMsg").text(t.responseJSON.msg)})});